name: Docker Deployment - dev

on:
  push:
    branches: [ "dev" ]

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}
  # working folder on ssh server
  TMP_FOLDER: /tmp/github/${{ github.sha }}


jobs:
  
  prepare-work-folder:
    runs-on: ubuntu-latest
    steps:
      - name: Create temp folder for deploying
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            set -e
            mkdir -p ${{ env.TMP_FOLDER}}
            cd ${{ env.TMP_FOLDER}}
            git init
            git remote add -f origin git@gitddhub.com:${{ github.repository }}.git
            git config core.sparseCheckout true
            echo "kube" >> .git/info/sparse-checkout
            echo "frontend" >> .git/info/sparse-checkout
            echo "backend" >> .git/info/sparse-checkout
            git pull origin ${{ github.ref_name }}

  build-and-save-image:
    runs-on: ubuntu-latest
    needs: prepare-work-folder
    if: success()
    strategy:
      fail-fast: false
      matrix:
        include:
          - module: frontend
          - module: backend

    steps:
      - name: Build module and save image
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            set -e
            cd ${{ env.TMP_FOLDER}}/${{ matrix.module }}
            docker build -f Dockerfile -t website-${{ matrix.module }}:dev .
            docker save website-${{ matrix.module }}:dev | sudo k3s ctr images import -
  
  deploy:
    runs-on: ubuntu-latest
    needs: build-and-save-image
    if: success()
    steps:
      - name: Deploy
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            set -e
            cd ${{ env.TMP_FOLDER}}
            sudo kubectl apply -f ./kube/dev-frontend-deployment.yaml
            sudo kubectl apply -f ./kube/dev-backend-deployment.yaml

            sudo kubectl -n dev rollout restart deployment website-frontend
            sudo kubectl -n dev rollout restart deployment website-backend

  cleanup:
    if: always()
    runs-on: ubuntu-latest
    needs: [prepare-work-folder, build-and-save-image, deploy]
    steps:
      - name: Clean up
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            rm -rf ${{ env.TMP_FOLDER}}
